NAME

    mkdir - make directories

SYNOPSIS

    mkdir [-p][-m mode] dir...

DESCRIPTION

    The mkdir utility shall create the directories specified by the operands,
in the order specified.

    For each dir operand, the mkdir utility shall perform actions equivalent
to the mkdir() function defined in the System Interfaces volume of IEEE Std
1003.1-2001, called with the following arguments:

        The dir operand is used as the path argument.

        The value of the bitwise-inclusive OR of S_IRWXU, S_IRWXG, and
S_IRWXO is used as the mode argument. (If the -m option is specified, the
mode option-argument overrides this default.)

OPTIONS

    The mkdir utility shall conform to the Base Definitions volume of IEEE
Std 1003.1-2001, Section 12.2, Utility Syntax Guidelines.

    The following options shall be supported:

    -m  mode
        Set the file permission bits of the newly-created directory to the
specified mode value. The mode option-argument shall be the same as the mode
operand defined for the chmod utility. In the symbolic_mode strings, the op
characters '+' and '-' shall be interpreted relative to an assumed initial
mode of a= rwx; '+' shall add permissions to the default mode, '-' shall
delete permissions from the default mode.
    -p
        Create any missing intermediate pathname components.

        For each dir operand that does not name an existing directory,
effects equivalent to those caused by the following command shall occur:

        mkdir -p -m $(umask -S),u+wx $(dirname dir) &&
        mkdir [-m mode] dir

        where the -m mode option represents that option supplied to the
original invocation of mkdir, if any.

        Each dir operand that names an existing directory shall be ignored
without error.

OPERANDS

    The following operand shall be supported:

    dir
        A pathname of a directory to be created.

STDIN

    Not used.

INPUT FILES

    None.

ENVIRONMENT VARIABLES

    The following environment variables shall affect the execution of mkdir:

    LANG
        Provide a default value for the internationalization variables that
are unset or null. (See the Base Definitions volume of IEEE Std 1003.1-2001,
Section 8.2, Internationalization Variables for the precedence of
internationalization variables used to determine the values of locale
categories.)
    LC_ALL
        If set to a non-empty string value, override the values of all the
other internationalization variables.
    LC_CTYPE
        Determine the locale for the interpretation of sequences of bytes of
text data as characters (for example, single-byte as opposed to multi-byte
characters in arguments).
    LC_MESSAGES
        Determine the locale that should be used to affect the format and
contents of diagnostic messages written to standard error.
    NLSPATH
        [XSI] [Option Start] Determine the location of message catalogs for
the processing of LC_MESSAGES . [Option End]

ASYNCHRONOUS EVENTS

    Default.

STDOUT

    Not used.

STDERR

    The standard error shall be used only for diagnostic messages.

OUTPUT FILES

    None.

EXTENDED DESCRIPTION

    None.

EXIT STATUS

    The following exit values shall be returned:

     0
        All the specified directories were created successfully or the -p
option was specified and all the specified directories now exist.
    >0
        An error occurred.

CONSEQUENCES OF ERRORS

    Default.

The following sections are informative.
APPLICATION USAGE

    The default file mode for directories is a= rwx (777 on most systems)
with selected permissions removed in accordance with the file mode creation
mask. For intermediate pathname components created by mkdir, the mode is the
default modified by u+ wx so that the subdirectories can always be created
regardless of the file mode creation mask; if different ultimate permissions
are desired for the intermediate directories, they can be changed afterwards
with chmod.

    Note that some of the requested directories may have been created even if
an error occurs.

EXAMPLES

    None.

RATIONALE

    The System V -m option was included to control the file mode.

    The System V -p option was included to create any needed intermediate
directories and to complement the functionality provided by rmdir for
removing directories in the path prefix as they become empty. Because no
error is produced if any path component already exists, the -p option is also
useful to ensure that a particular directory exists.

    The functionality of mkdir is described substantially through a reference
to the mkdir() function in the System Interfaces volume of IEEE Std
1003.1-2001. For example, by default, the mode of the directory is affected
by the file mode creation mask in accordance with the specified behavior of
the mkdir() function. In this way, there is less duplication of effort
required for describing details of the directory creation.

FUTURE DIRECTIONS

    None.

SEE ALSO

    chmod(), rm, rmdir(), umask(), the System Interfaces volume of IEEE Std
1003.1-2001, mkdir()

