.Dd December 2008
.Dt TABS 1
.Sh NAME
.Nm tabs
.Nd set terminal tabs
.Sh SYNOPSIS
.Nm
.Op "" Fl Ns Ar n Ns | Fl a| Fl a2| Fl c| Fl c2| Fl c3| Fl f| Fl p| Fl s| Fl u
.Op \+m Ns Op n
.Op Fl T Ar type
.Pp
.Nm
.Op Fl T Ar type Ns
.Op ""\+ Ns Op Ar n
.Ar n1 Ns Op ,n2,...
.Sh DESCRIPTION
The
.Nm
utility will display a series of characters that first clears
the hardware terminal tab settings and then initializes the tab stops at
the specified positions [XSI] [Option Start] and optionally adjusts the
margin.  [Option End]
.Pp
The phrase
.Qq tab-stop position Ar N
will be taken to mean that, from the start of a line of output, tabbing
to position
.Ar N
will cause the next character output to be in the
.Pq Ar N Ns +1 Ns
th column position on that line.  The maximum number of tab stops
allowed is terminal-dependent.
.Pp
It need not be possible to implement
.Nm
on certain terminals.  If the terminal type obtained from the
.Ev TERM
environment variable or
.Fl T
option represents such a terminal, an appropriate diagnostic message
will be written to standard error and tabs will exit with a status
greater than zero.
.Sh OPTIONS
The
.Nm
utility will conform to the Base Definitions volume of IEEE Std
1003.1-2001, Section 12.2, Utility Syntax Guidelines, [XSI] [Option
Start] except for various extensions: the options
.Fl a2 , c2
and
.Fl c3
are multi-character.  [Option End]
.Pp
The following options will be supported:
.Bl -tag -width flags
.It Fl Ar n
Specify repetitive tab stops separated by a uniform number of column
positions,
.Ar n ,
where
.Ar n
is a single-digit decimal number.  The default usage of
.Nm
with no arguments will be equivalent to
.Nm Fl Ar 8 .
When
.Fl Ar 0
is used, the tab stops will be cleared and no new ones set.
.It Fl a
[XSI] [Option Start] 1,10,16,36,72
.Pp
Assembler, applicable to some mainframes.  [Option End]
.It Fl a2
[XSI] [Option Start] 1,10,16,40,72
.Pp
Assembler, applicable to some mainframes.  [Option End]
.It Fl c
[XSI] [Option Start] 1,8,12,16,20,55
.Pp
COBOL, normal format.  [Option End]
.It Fl c2
[XSI] [Option Start] 1,6,10,14,49
.Pp
COBOL, compact format (columns 1 to 6 omitted).  [Option End]
.It Fl c3
[XSI] [Option Start] 1,6,10,14,18,22,26,30,34,38,42,46,50,54,58,62,67
.Pp
COBOL compact format (columns 1 to 6 omitted), with more tabs than
.Fl c2 .
[Option End]
.It Fl f
[XSI] [Option Start] 1,7,11,15,19,23
.Pp
FORTRAN [Option End]
.It Fl p
[XSI] [Option Start] 1,5,9,13,17,21,25,29,33,37,41,45,49,53,57,61
.Pp
PL/1 [Option End]
.It Fl s
[XSI] [Option Start] 1,10,55
.Pp
SNOBOL [Option End]
.It Fl u
[XSI] [Option Start] 1,12,20,44
.Pp
Assembler, applicable to some mainframes.  [Option End]
.It Fl T Ar type
Indicate the type of terminal.  If this option is not supplied and the
.Ev TERM
variable is unset or null, an unspecified default terminal type will be
used.  The setting of type will take precedence over the value in
.Ev TERM .
.El
.Sh OPERANDS
.Pp
The following operand will be supported:
.Bl -tag -width
.It Ar n1 Ns Op , Ns Ar n2 , Ns ...
A single command line argument that consists of tab-stop values
separated using either commas or <blank>s.  The application will ensure
that the tab-stop values are positive decimal integers in strictly
ascending order.  If any number (except the first one) is preceded by a
plus sign, it is taken as an increment to be added to the previous
value.  For example, the tab lists 1,10,20,30 and 1,10,+10,+10 are
considered to be identical.
.El
.Sh STDIN
Not used.
.Sh INPUT FILES
None.
.Sh ENVIRONMENT VARIABLES
The following environment variables will affect the execution of tabs:
.Bl -tag -width
.It Ev LANG
Provide a default value for the internationalization variables that are
unset or null.  (See the Base Definitions volume of IEEE Std
1003.1-2001, Section 8.2, Internationalization Variables for the
precedence of internationalization variables used to determine the
values of locale categories.)
.It Ev LC_ALL
If set to a non-empty string value, override the values of all the other
internationalization variables.
.It Ev LC_CTYPE
Determine the locale for the interpretation of sequences of bytes of
text data as characters (for example, single-byte as opposed to
multi-byte characters in arguments).
.It Ev LC_MESSAGES
Determine the locale that should be used to affect the format and
contents of diagnostic messages written to standard error.
.It Ev NLSPATH
[XSI] [Option Start] Determine the location of message catalogs for the
processing of
.Ev LC_MESSAGES .
[Option End]
.Pp
.It Ev TERM
Determine the terminal type.  If this variable is unset or null, and if
the
.Fl T
option is not specified, an unspecified default terminal type
will be used.
.El
.Sh ASYNCHRONOUS EVENTS
Default.
.Sh STDOUT
If standard output is a terminal, the appropriate sequence to clear and
set the tab stops may be written to standard output in an unspecified
format.  If standard output is not a terminal, undefined results occur.
.Sh STDERR
The standard error will be used only for diagnostic messages.
.Sh OUTPUT FILES
None.
.Sh EXTENDED DESCRIPTION
None.
.Sh EXIT STATUS
The following exit values will be returned:
.Bl -tag -width
.It 0
Successful completion.
.It >0
An error occurred.
.El
.Sh CONSEQUENCES OF ERRORS
Default.
.Pp
The following sections are informative.
.Sh APPLICATION USAGE
This utility makes use of the terminal's hardware tabs and the stty tabs
option.
.Pp
This utility is not recommended for application use.
.Pp
Some integrated display units might not have escape sequences to set tab
stops, but may be set by internal system calls.  On these terminals,
.Nm
works if standard output is directed to the terminal; if output is
directed to another file, however,
.Nm
fails.
.Sh EXAMPLES
None.
.Sh RATIONALE
Consideration was given to having the tput utility handle all of the
functions described in
.Nm .
However, the separate
.Nm
utility was retained because it seems more intuitive to use a command
named
.Nm
than tput with a new option.  The tput utility does not support setting
or clearing tabs, and no known historical version of
.Nm
supports the capability of setting arbitrary tab stops.
.Pp
The System V tabs interface is very complex; the version in this volume
of IEEE Std 1003.1-2001 has a reduced feature list, but many of the
features omitted were restored as XSI extensions even though the
supported languages and coding styles are primarily historical.
.Pp
There was considerable sentiment for specifying only a means of
resetting the tabs back to a known state-presumably the "standard" of
tabs every eight positions.  The following features were omitted:
.Pp
.Bl -bullet
.It
Setting tab stops via the first line in a file, using --
.Ar file .
Since even the SVID has no complete explanation of this feature, it is
doubtful that it is in widespread use.
.El
.Pp
In an early proposal, a
.Fl t
tablist option was added for consistency with
.Xr expand ;
this was later removed when inconsistencies with the historical list of
tabs were identified.
.Pp
Consideration was given to adding a
.Fl p
option that would output the current tab settings so that they could be
saved and then later restored.  This was not accepted because querying
the tab stops of the terminal is not a capability in historical terminfo
or termcap facilities and might not be supported on a wide range of
terminals.
.Sh FUTURE DIRECTIONS
None.
.Sh SEE ALSO
.Xr expand ,
.Xr stty ,
.Xr tput ,
.Xr unexpand
