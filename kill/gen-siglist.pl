#!/usr/bin/perl -w

use strict;

my (%siglist, %alias, @sigs);

&read_input;
&pr_header;
&pr_list;
&pr_footer;
if (%alias) {
	&pr_alias_header;
	&pr_alias_list;
	&pr_footer;
}
exit(0);

sub read_input {
	my ($s);

	while (<>) {
		if (/#define\s+SIG([A-Z0-9]+)\s+(\d+)/) {
			if ($2 <= 64) {
				$s = $sigs[$2];
				if (!$s) {
					$siglist{$1} = $2;
					$sigs[$2] = $1;
				} else {
					$alias{$1} = $s;
				}
			}
		}
		elsif (/#define\s+SIG([A-Z0-9]+)\s+SIG([A-Z0-9]+)/) {
			if (defined $siglist{$2}) {
				$alias{$1} = $2;
			}
		}
	}
}

sub pr_list {
	my $i = 0;
	my ($s);

	for ($i = 0; $i <= $#sigs; $i++) {
		$s = $sigs[$i];
		if ($s) {
			my $tab = "\t";
			$tab = "" if (length($s) > 4);
			printf "\t\"%s\",\t%s/* %2d */\n", $s, $tab, $i;
		} else {
			printf "\tNULL,\t\t/* %2d */\n", $i;
		}
	}
}

sub pr_alias_list {
	my ($s);

	foreach $s (sort keys %alias) {
		printf "\t\"%s\", \"%s\",\n", $s, $alias{$s};
	}
}

sub pr_header {
print <<"EOM";

/*
 * File auto-generated by gen-siglist.pl in the posixutils package.
 * Do not edit.
 */

static const char *platform_siglist[] = {
EOM
}

sub pr_footer {
print <<"EOM";
};

EOM
}

sub pr_alias_header {
print <<"EOM";
static const char *platform_sigaliases[] = {
EOM
}

